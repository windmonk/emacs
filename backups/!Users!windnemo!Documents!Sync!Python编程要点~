# 注意保存数据
* Python的历史由来
** 1、大量的计算需求推进了计算机的发展
   二战期间，战争刺激了社会的计算需求。对于估算是够用就好，计算我觉得也是一样，不同层次的要求，对计算的精确度的需要也是不同。
   需求和供给的关系，推进了计算机的发展。计算本身就是一种商品！
** 2、冯诺依曼计算机体系
   这并非是他个人独创，而是计算机长期演化的结果，冯诺依曼进行了很好的总结。
   | 五大组成 | 主要功能                                                                     |
   |----------+------------------------------------------------------------------------------|
   | 控制器   | 指挥、控制、管理其他部分，同时决定执行指令的顺序，控制不同部件之间的数据交流 |
   | 运算器   | CPU-Central Processing Unit 进行算数和逻辑运算                               |
   | 存储器   | 不仅要记录数据,还要记录所要的执行的程序                                      |
   | 输入设备 | 输入信息                                                                     |
   | 输出设备 | 输出信息                                                                     |

** 3、硬件-操作系统-应用程序 的关系
   [[file:WechatIMG1.jpeg]]
   硬件只与操作系统的内核沟通，操作系统中的系统调用部分全权负责与操作系统的内核沟通，如果把系统调用命令比作是音律，那么常用的库就是和弦。
   应用程序包裹在最外层负责和用户交互。

** 4、编程范式
   分为：1、面向过程（C语言） 2、面向对象（JAVA语言） 3、面向函数（Lisp语言）
   Python同时支持以上三种范式

** 5、由计算机导致的阶层划分
   残酷的讲，对机器的调配和占有能力，将会取代血统和教育，成为未来阶级区分的衡量标志。（用机器进行高频的股票交易）

* Python的编程注意
** 1、注释
   单行注释：使用 #
   多行注释：使用 """ 
** 2、改写*.py成可执行脚本
   1、在*.py文件的首行加一行所要使用的Python解释器。
   2、修改*.py文件的权限，改为可执行755。
   3、终端中执行./*.py即可。
** 3、创建多个版本的Python环境
   需要使用virtualenv的Python包，使用pip安装即可
   1、安装
   pip install virtualenv 
   2、配置虚拟环境
   # /usr/bin/python3.5是解释器的位置，myenv是新建虚拟环境的名称。
   $ virtualenv -p /usr/bin/python3.5 myenv  
   3、使用名字为myenv的虚拟环境
   $ source myenv/bin/active 
   4、退出虚拟环境
   $ deactivate 

* Python的运算
** 1、数值运算
   | 数值运算 | 运算符号 |
   |----------+----------|
   | 加       | +        |
   | 减       | -        |
   |          |          |
  
